make[1]: Entering directory '/coursegrader/submit/os'
cargo build --features "board_k210"
# chmod 777 /dev/ttyUSB0
# python3 ../tools/kflash.py	 -p /dev/ttyUSB0 -b 1500000 target/riscv64imac-unknown-none-elf/debug/kernel.bin -t
#python3 -m miniterm --eol LF --dtr 0 --rts 0 --filter direct /dev/ttyUSB0 115200
make[1]: Leaving directory '/coursegrader/submit/os'

compile STDERR
warning: unused import: `alloc::collections::LinkedList`
 --> src/algorithm/src/scheduler/fifo_scheduler.rs:4:5
  |
4 | use alloc::collections::LinkedList;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: 1 warning emitted

   Compiling os v0.1.0 (/coursegrader/submit/os)
warning: unused doc comment
  --> src/process/thread.rs:17:1
   |
17 | /// 线程计数，用于设置线程 ID
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ rustdoc does not generate documentation for macro invocations
   |
   = note: `#[warn(unused_doc_comments)]` on by default
   = help: to document an item produced by a macro, the macro must produce the documentation as part of its expansion

warning: unnecessary parentheses around `while` condition
   --> src/console.rs:129:15
    |
129 |         while (uarths_txdata.read_volatile() & (1u32 << 31) != 0) {
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove these parentheses
    |
    = note: `#[warn(unused_parens)]` on by default

warning: unused imports: `DRIVERS`, `DeviceType`, `block::BlockDevice`
 --> src/fs/mod.rs:6:5
  |
6 |     block::BlockDevice,
  |     ^^^^^^^^^^^^^^^^^^
7 |     driver::{DeviceType, DRIVERS},
  |              ^^^^^^^^^^  ^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self`
 --> src/interrupt/handler.rs:6:15
  |
6 |     sstatus::{self, SPP},
  |               ^^^^

warning: unused import: `VirtualAddress`
 --> src/syscall/process.rs:7:39
  |
7 | use crate::memory::{MemorySet, Flags, VirtualAddress, VirtualPageNumber};
  |                                       ^^^^^^^^^^^^^^

warning: unused imports: `park_current_thread`, `prepare_next_thread`, `sleep_current_thread`
  --> src/syscall/process.rs:10:5
   |
10 |     sleep_current_thread,
   |     ^^^^^^^^^^^^^^^^^^^^
11 |     park_current_thread,
   |     ^^^^^^^^^^^^^^^^^^^
12 |     prepare_next_thread,
   |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::board::config::CPU_FREQUENCY`
  --> src/syscall/process.rs:17:5
   |
17 | use crate::board::config::CPU_FREQUENCY;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `alloc::sync::Arc`
  --> src/syscall/process.rs:19:5
   |
19 | use alloc::sync::Arc;
   |     ^^^^^^^^^^^^^^^^

warning: unused import: `alloc::collections::BTreeMap`
 --> src/process/process.rs:8:5
  |
8 | use alloc::collections::BTreeMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `hashbrown::HashSet`
 --> src/process/processor.rs:5:5
  |
5 | use hashbrown::HashSet;
  |     ^^^^^^^^^^^^^^^^^^

warning: unused import: `KernelStack`
 --> src/process/processor.rs:7:36
  |
7 | use crate::process::kernel_stack::{KernelStack, KERNEL_STACK};
  |                                    ^^^^^^^^^^^

warning: unused import: `alloc::vec`
  --> src/process/processor.rs:10:5
   |
10 | use alloc::vec;
   |     ^^^^^^^^^^

warning: unused import: `core::cell::RefCell`
  --> src/process/processor.rs:12:5
   |
12 | use core::cell::RefCell;
   |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `alloc::vec::Vec`
 --> src/process/thread.rs:7:5
  |
7 | use alloc::vec::Vec;
  |     ^^^^^^^^^^^^^^^

warning: unused import: `alloc::vec`
 --> src/process/sleep.rs:3:5
  |
3 | use alloc::vec;
  |     ^^^^^^^^^^

warning: unused import: `alloc::sync::Arc`
 --> src/process/sleep.rs:5:5
  |
5 | use alloc::sync::Arc;
  |     ^^^^^^^^^^^^^^^^

warning: unused import: `crate::process::Thread`
 --> src/process/sleep.rs:6:5
  |
6 | use crate::process::Thread;
  |     ^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `vec::Vec`, `vec`
  --> src/process/mod.rs:15:24
   |
15 | use alloc::{sync::Arc, vec, vec::Vec};
   |                        ^^^  ^^^^^^^^

warning: unused import: `crate::interrupt::dummy`
 --> src/board/k210/mod.rs:2:5
  |
2 | use crate::interrupt::dummy;
  |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `log::*`
  --> src/sync/condvar.rs:12:5
   |
12 | use log::*;
   |     ^^^^^^

warning: unused import: `lazy_static::lazy_static`
 --> src/logging.rs:3:5
  |
3 | use lazy_static::lazy_static;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `AtomicBool`, `Ordering`, `spin_loop_hint`
  --> src/main.rs:62:26
   |
62 | use core::sync::atomic::{AtomicBool, spin_loop_hint, Ordering};
   |                          ^^^^^^^^^^  ^^^^^^^^^^^^^^  ^^^^^^^^

warning: unused import: `lazy_static::*`
  --> src/main.rs:65:5
   |
65 | use lazy_static::*;
   |     ^^^^^^^^^^^^^^

warning: unused import: `crate::sync::Mutex`
  --> src/main.rs:66:5
   |
66 | use crate::sync::Mutex;
   |     ^^^^^^^^^^^^^^^^^^

warning: the item `KERNEL_STACK` is imported redundantly
  --> src/main.rs:92:13
   |
63 | use process::*;
   |     ---------- the item `KERNEL_STACK` is already imported here
...
92 |         use crate::process::KERNEL_STACK;
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: value assigned to `sp` is never read
   --> src/main.rs:123:38
    |
123 |     info!("sp = {:#x}", unsafe { let mut sp: usize = 0; llvm_asm!("mv $0, sp" : "=r"(sp) ::: "volatile"); sp });
    |                                      ^^^^^^
    |
    = note: `#[warn(unused_assignments)]` on by default
    = help: maybe it is overwritten before being read?

warning: unused variable: `user_before`
  --> src/memory/heap.rs:37:13
   |
37 |         let user_before = self.0.lock().stats_alloc_user();
   |             ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_user_before`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `user_before`
  --> src/memory/heap.rs:54:13
   |
54 |         let user_before = self.0.lock().stats_alloc_user();
   |             ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_user_before`

warning: unused variable: `dealloc_size`
  --> src/memory/heap.rs:55:13
   |
55 |         let dealloc_size = layout.size();
   |             ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_dealloc_size`

warning: value assigned to `hartid` is never read
   --> src/process/processor.rs:236:9
    |
236 |     let mut hartid: usize = 0;
    |         ^^^^^^^^^^
    |
    = help: maybe it is overwritten before being read?

warning: unused variable: `i`
  --> src/process/processor.rs:32:13
   |
32 |         for i in 0..CPU_NUM {
   |             ^ help: if this is intentional, prefix it with an underscore: `_i`

warning: variable does not need to be mutable
   --> src/interrupt/handler.rs:176:17
    |
176 |             let mut c = (0x3800_0004 as *const u32).read_volatile();
    |                 ----^
    |                 |
    |                 help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: cannot borrow `self.hart_time` as mutable because it is also borrowed as immutable
   --> src/process/thread.rs:191:17
    |
187 |         if let Some(time_pair) = self.hart_time.get(&hart) {
    |                                  -------------- immutable borrow occurs here
...
191 |                 self.hart_time.insert(hart, (time_pair.0, time_pair.1 + delta_time));
    |                 ^^^^^^^^^^^^^^               ----------- immutable borrow later used here
    |                 |
    |                 mutable borrow occurs here
    |
    = note: `#[warn(mutable_borrow_reservation_conflict)]` on by default
    = warning: this borrowing pattern was not meant to be accepted, and may become a hard error in the future
    = note: for more information, see issue #59159 <https://github.com/rust-lang/rust/issues/59159>

warning: cannot borrow `self.hart_time` as mutable because it is also borrowed as immutable
   --> src/process/thread.rs:189:17
    |
187 |         if let Some(time_pair) = self.hart_time.get(&hart) {
    |                                  -------------- immutable borrow occurs here
188 |             if is_user {
189 |                 self.hart_time.insert(hart, (time_pair.0 + delta_time, time_pair.1));
    |                 ^^^^^^^^^^^^^^               ----------- immutable borrow later used here
    |                 |
    |                 mutable borrow occurs here
    |
    = warning: this borrowing pattern was not meant to be accepted, and may become a hard error in the future
    = note: for more information, see issue #59159 <https://github.com/rust-lang/rust/issues/59159>

warning: cannot borrow `self.hart_time` as mutable because it is also borrowed as immutable
   --> src/process/thread.rs:207:13
    |
206 |         if let Some(time_pair) = self.hart_time.get(&hart) {
    |                                  -------------- immutable borrow occurs here
207 |             self.hart_time.insert(hart, (time_pair.0, time_pair.1 + delta_time));
    |             ^^^^^^^^^^^^^^               ----------- immutable borrow later used here
    |             |
    |             mutable borrow occurs here
    |
    = warning: this borrowing pattern was not meant to be accepted, and may become a hard error in the future
    = note: for more information, see issue #59159 <https://github.com/rust-lang/rust/issues/59159>

warning: unnecessary `unsafe` block
  --> src/process/thread.rs:83:17
   |
83 |             id: unsafe {
   |                 ^^^^^^ unnecessary `unsafe` block
   |
   = note: `#[warn(unused_unsafe)]` on by default

warning: unnecessary `unsafe` block
   --> src/process/thread.rs:103:17
    |
103 |             id: unsafe {
    |                 ^^^^^^ unnecessary `unsafe` block

warning: function is never used: `add_driver`
  --> src/drivers/block/virtio_blk.rs:30:8
   |
30 | pub fn add_driver(header: &'static mut VirtIOHeader) {
   |        ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function is never used: `virtio_probe`
  --> src/drivers/bus/virtio_mmio.rs:18:8
   |
18 | pub fn virtio_probe(node: &Node) {
   |        ^^^^^^^^^^^^

warning: constant is never used: `DEVICE_TREE_MAGIC`
  --> src/drivers/device_tree.rs:11:1
   |
11 | const DEVICE_TREE_MAGIC: u32 = 0xd00d_feed;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function is never used: `walk`
  --> src/drivers/device_tree.rs:14:4
   |
14 | fn walk(node: &Node) {
   |    ^^^^

warning: struct is never constructed: `DtbHeader`
  --> src/drivers/device_tree.rs:28:8
   |
28 | struct DtbHeader {
   |        ^^^^^^^^^

warning: function is never used: `init`
  --> src/drivers/device_tree.rs:34:8
   |
34 | pub fn init(dtb_va: VirtualAddress) {
   |        ^^^^

warning: function is never used: `init`
  --> src/drivers/mod.rs:14:8
   |
14 | pub fn init(dtb_pa: PhysicalAddress) {
   |        ^^^^

warning: constant is never used: `BLOCK_CACHE_CAPACITY`
 --> src/fs/config.rs:4:1
  |
4 | pub const BLOCK_CACHE_CAPACITY: usize = 0x10;
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function is never used: `wait_for_interrupt`
  --> src/process/processor.rs:49:11
   |
49 | unsafe fn wait_for_interrupt() {
   |           ^^^^^^^^^^^^^^^^^^

warning: function is never used: `device_init`
 --> src/board/qemu/mod.rs:6:8
  |
6 | pub fn device_init(dtb_pa: PhysicalAddress) {
  |        ^^^^^^^^^^^

warning: function is never used: `print`
  --> src/logging.rs:31:8
   |
31 | pub fn print(args: fmt::Arguments) {
   |        ^^^^^

warning: function is never used: `sample_process`
   --> src/main.rs:142:4
    |
142 | fn sample_process(id: usize) {
    |    ^^^^^^^^^^^^^^

warning: missing documentation for a function
   --> src/interrupt/handler.rs:189:1
    |
189 | pub unsafe fn dummy() {
    | ^^^^^^^^^^^^^^^^^^^^^
    |
note: the lint level is defined here
   --> src/main.rs:13:9
    |
13  | #![warn(missing_docs)]
    |         ^^^^^^^^^^^^

warning: missing documentation for a function
  --> src/interrupt/timer.rs:48:1
   |
48 | pub fn read_time() -> usize { time::read() }
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused `core::result::Result` that must be used
  --> src/syscall/process.rs:94:13
   |
94 |             process.alloc_run_stack();
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_must_use)]` on by default
   = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `core::result::Result` that must be used
   --> src/memory/mapping/memory_set.rs:144:17
    |
144 |                 memory_set.add_segment(*segment, None);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: 53 warnings emitted

    Finished dev [unoptimized + debuginfo] target(s) in 1.60s
3+1 records in
3+1 records out
491544 bytes (492 kB, 480 KiB) copied, 0.000347577 s, 1.4 GB/s
