import sys
import json
import pdb
template = '''
RUN LTP CASE writev01
tst_tmpdir.c:316: TINFO: Using /tmp/LTP_wriRnYU84 as tmpdir (ext2/ext3/ext4 filesystem)
tst_test.c:1860: TINFO: LTP version: 20240930
tst_test.c:1864: TINFO: Tested kernel: 5.15.153.1-microsoft-standard-WSL2 #1 SMP Fri Mar 29 23:14:13 UTC 2024 x86_64
tst_test.c:1703: TINFO: Timeout per run is 0h 00m 30s
writev01.c:124: TPASS: invalid iov_len, expected: -1 (EINVAL), got: -1 (EINVAL)
writev01.c:124: TPASS: invalid fd, expected: -1 (EBADF), got: -1 (EBADF)
writev01.c:124: TPASS: invalid iovcnt, expected: -1 (EINVAL), got: -1 (EINVAL)
writev01.c:129: TPASS: zero iovcnt, expected: 0, got: 0
writev01.c:129: TPASS: NULL and zero length iovec, expected: 64, got: 64
writev01.c:124: TPASS: write to closed pipe, expected: -1 (EPIPE), got: -1 (EPIPE)

Summary:
passed   6
failed   0
broken   0
skipped  0
warnings 0
END LTP CASE writev01 : 0
RUN LTP CASE setegid02
tst_test.c:1860: TINFO: LTP version: 20240930
tst_test.c:1864: TINFO: Tested kernel: 5.15.153.1-microsoft-standard-WSL2 #1 SMP Fri Mar 29 23:14:13 UTC 2024 x86_64
tst_test.c:1703: TINFO: Timeout per run is 0h 00m 30s
setegid02.c:29: TPASS: setegid(65534) : EPERM (1)

Summary:
passed   1
failed   0
broken   0
skipped  0
warnings 0
END LTP CASE setegid02: 0
'''

def parse_ltp_log(content):
    """
    解析 LTP 日志文本，判断每个测试案例是否成功
    :param content: 包含 LTP 日志的字符串
    :return: 字典，键为测试案例名称，值为是否成功 (True/False)
    """
    lines = content.split('\n')
    result = {}
    current_case = None
    summary_data = {}
    return_code = None
    in_summary = False
    for line in lines:
        stripped_line = line.strip()

        # 检测测试案例开始
        if stripped_line.startswith('RUN LTP CASE'):
            current_case = stripped_line.split()[-1]
            summary_data = {}
            return_code = None
            in_summary = False
        # 检测测试案例结束
        elif current_case and stripped_line.startswith(f'END LTP CASE {current_case}'):
            # 提取返回值
            parts = stripped_line.split()
            return_code = int(parts[-1])

            # 判断是否满足成功条件
            success = (
                return_code == 0
                and summary_data.get('passed', 0) > 0
                and summary_data.get('failed', 0) == 0
                and summary_data.get('broken', 0) == 0
                and summary_data.get('skipped', 0) == 0
                and summary_data.get('warnings', 0) == 0
            )

            result[current_case] = success
            print(current_case)
            print(success)
            current_case = None

        # 处理 Summary 部分
        elif current_case:
            if stripped_line == 'Summary:':
                in_summary = True
                continue

            if in_summary:
                if not stripped_line:  # 空行结束 Summary
                    in_summary = False
                    continue

                parts = stripped_line.split()
                if len(parts) >= 2 and parts[0] in ['passed', 'failed', 'broken', 'skipped', 'warnings']:
                    key = parts[0]
                    value = int(parts[1])
                    summary_data[key] = value

    return result

result =  parse_ltp_log(sys.stdin.read())
result = [{
    "name": k,
    "pass": 1 if v else 0,
    "all": 1,
    "score": 1 if v else 0,
} for k, v in result.items()]

print(json.dumps(result))
